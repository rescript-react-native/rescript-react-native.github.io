"use strict";(self.webpackChunkrescript_react_native_github_io=self.webpackChunkrescript_react_native_github_io||[]).push([[2865],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||i;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2705:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={id:"imagepickerios",title:"ImagePickerIOS",officialDoc:"https://reactnative.dev/docs/imagepickerios"},o=void 0,l={unversionedId:"imagepickerios",id:"imagepickerios",title:"ImagePickerIOS",description:"Note",source:"@site/docs/imagepickerios.md",sourceDirName:".",slug:"/imagepickerios",permalink:"/docs/imagepickerios",draft:!1,editUrl:"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/docs/imagepickerios.md",tags:[],version:"current",frontMatter:{id:"imagepickerios",title:"ImagePickerIOS",officialDoc:"https://reactnative.dev/docs/imagepickerios"}},c={},p=[{value:"Note",id:"note",level:2},{value:"Types",id:"types",level:2},{value:"<code>imageUri</code>",id:"imageuri",level:3},{value:"<code>cameraDialogConfig</code>",id:"cameradialogconfig",level:3},{value:"<code>selectDialogConfig</code>",id:"selectdialogconfig",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>canUseCamera</code>",id:"canusecamera",level:3},{value:"<code>canRecordVideos</code>",id:"canrecordvideos",level:3},{value:"<code>openCameraDialog</code>",id:"opencameradialog",level:3},{value:"<code>openSelectDialog</code>",id:"openselectdialog",level:3}],s={toc:p},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"note"},"Note"),(0,r.kt)("p",null,"This API will be removed from React Native as part of the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/react-native/issues/23313"},(0,r.kt)("em",{parentName:"a"},"Lean Core"))," effort.\nPlease refer to the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/react-native-community/react-native-image-picker-ios"},"community package"),"\nif you wish to use this component."),(0,r.kt)("p",null,"However note that more current packages such as \u2022\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/react-native-community/react-native-image-picker"},(0,r.kt)("inlineCode",{parentName:"a"},"react-native-image-picker")),"\nfor which ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rescript-react-native/image-picker"},"bindings")," are\navailable, or \u2022\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.expo.io/versions/latest/sdk/imagepicker/"},(0,r.kt)("inlineCode",{parentName:"a"},"expo-image-picker"))," are\nrecommended instead."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Before you may use this API, you need to link the ",(0,r.kt)("inlineCode",{parentName:"p"},"RCTCameraRoll")," library to\nyour app and provide a description for your use of the Photo Library."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"you need to add ",(0,r.kt)("inlineCode",{parentName:"li"},"RCTCameraRoll.xcodeproj")," (located in the\n",(0,r.kt)("inlineCode",{parentName:"li"},"node_modules/react-native/Libraries/CameraRoll")," subdirectory of your app) to\nyour project's Libraries tree in XCode, then"),(0,r.kt)("li",{parentName:"ul"},"you need to specify ",(0,r.kt)("inlineCode",{parentName:"li"},"libRCTCameraRoll.a")," under ",(0,r.kt)("em",{parentName:"li"},"Link Binary with Libraries")," in\nyour app's ",(0,r.kt)("em",{parentName:"li"},"Build Phases")," tab."),(0,r.kt)("li",{parentName:"ul"},"you also need to set the ",(0,r.kt)("em",{parentName:"li"},"Privacy - Photo Library Usage Description")," (or\n",(0,r.kt)("em",{parentName:"li"},"NSPhotoLibraryUsageDescription"),") key under ",(0,r.kt)("em",{parentName:"li"},"Custom iOS Target Properties")," in\nyour apps' ",(0,r.kt)("em",{parentName:"li"},"Info")," tab.")),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("h3",{id:"imageuri"},(0,r.kt)("inlineCode",{parentName:"h3"},"imageUri")),(0,r.kt)("p",null,"An alias for the ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"type imageUri = string\n")),(0,r.kt)("h3",{id:"cameradialogconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"cameraDialogConfig")),(0,r.kt)("p",null,"An abstract type which can be created using the constructor of the same name.\nYou may call the constructor as ",(0,r.kt)("inlineCode",{parentName:"p"},"cameraDialogConfig()")," to use the default\nvalues."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"cameraDialogConfig: (~videoMode: bool=?, unit) => cameraDialogConfig\n")),(0,r.kt)("h3",{id:"selectdialogconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"selectDialogConfig")),(0,r.kt)("p",null,"An abstract type which can be created using the constructor of the same name.\nYou may call the constructor as ",(0,r.kt)("inlineCode",{parentName:"p"},"selectDialogConfig()")," to use the default\nvalues."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"selectDialogConfig:\n  (~showImages: bool=?, ~showVideos: bool=?, unit) => selectDialogConfig\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"canusecamera"},(0,r.kt)("inlineCode",{parentName:"h3"},"canUseCamera")),(0,r.kt)("p",null,"Method to check whether the app has permissions to use the camera, takes a\ncallback of type ",(0,r.kt)("inlineCode",{parentName:"p"},"bool => unit"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"canUseCamera: (bool => unit) => unit\n")),(0,r.kt)("h3",{id:"canrecordvideos"},(0,r.kt)("inlineCode",{parentName:"h3"},"canRecordVideos")),(0,r.kt)("p",null,"Method to check whether the app has permissions to record videos, takes a\ncallback of type ",(0,r.kt)("inlineCode",{parentName:"p"},"bool => unit"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"canRecordVideos: (bool => unit) => unit\n")),(0,r.kt)("h3",{id:"opencameradialog"},(0,r.kt)("inlineCode",{parentName:"h3"},"openCameraDialog")),(0,r.kt)("p",null,"Method to request the Camera dialog given a config (of type\n",(0,r.kt)("a",{parentName:"p",href:"#cameraDialogConfig"},(0,r.kt)("inlineCode",{parentName:"a"},"cameraDialogConfig")),") to specify whether the camera is\nlaunched in video mode. When an image or video is captured, ",(0,r.kt)("inlineCode",{parentName:"p"},"onSuccess")," callback\nis passed the returned ",(0,r.kt)("inlineCode",{parentName:"p"},"imageUri"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"width"),"; ",(0,r.kt)("inlineCode",{parentName:"p"},"onError")," callback is\napplied otherwise. As",(0,r.kt)("inlineCode",{parentName:"p"},"'error")," is an abstract type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"openCameraDialog:\n  (\n    ~config: cameraDialogConfig,\n    ~onSuccess: (imageUri, ~height: float, ~width: float, unit) => unit,\n    ~onError: 'error => unit\n  ) =>\n  unit\n")),(0,r.kt)("h3",{id:"openselectdialog"},(0,r.kt)("inlineCode",{parentName:"h3"},"openSelectDialog")),(0,r.kt)("p",null,"Method to request the Image Gallery given a config (of type\n",(0,r.kt)("a",{parentName:"p",href:"#openSelectDialog"},(0,r.kt)("inlineCode",{parentName:"a"},"openSelectDialog")),") to specify whether images and/or videos\nshould be listed. When an image or video is selected, ",(0,r.kt)("inlineCode",{parentName:"p"},"onSuccess")," callback is\npassed the returned ",(0,r.kt)("inlineCode",{parentName:"p"},"imageUri"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"width"),"; ",(0,r.kt)("inlineCode",{parentName:"p"},"onError")," callback is\nexecuted otherwise. As",(0,r.kt)("inlineCode",{parentName:"p"},"'error")," is an abstract type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"openSelectDialog:\n  (\n    ~config: selectDialogConfig,\n    ~onSuccess: (imageUri, ~height: float, ~width: float, unit) => unit,\n    ~onError: 'error => unit\n  ) =>\n  unit\n")))}m.isMDXComponent=!0}}]);