"use strict";(self.webpackChunkrescript_react_native_github_io=self.webpackChunkrescript_react_native_github_io||[]).push([[6731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||a;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={id:"permissionsandroid",title:"PermissionsAndroid",officialDoc:"https://reactnative.dev/docs/permissionsandroid"},o=void 0,s={unversionedId:"permissionsandroid",id:"permissionsandroid",title:"PermissionsAndroid",description:"Only for projects supporting Native Code. Requires the project to have been",source:"@site/docs/permissionsandroid.md",sourceDirName:".",slug:"/permissionsandroid",permalink:"/docs/permissionsandroid",draft:!1,editUrl:"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/docs/permissionsandroid.md",tags:[],version:"current",frontMatter:{id:"permissionsandroid",title:"PermissionsAndroid",officialDoc:"https://reactnative.dev/docs/permissionsandroid"},sidebar:"api",previous:{title:"PanResponder",permalink:"/docs/panresponder"},next:{title:"PixelRatio",permalink:"/docs/pixelratio"}},l={},p=[{value:"Types",id:"types",level:2},{value:"<code>Permission.t</code>",id:"permissiont",level:3},{value:"<code>Result.t</code>",id:"resultt",level:3},{value:"<code>rationale</code>",id:"rationale",level:3},{value:"<code>dict</code>",id:"dict",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>check</code>",id:"check",level:3},{value:"<code>request</code>",id:"request",level:3},{value:"<code>requestWithRationale</code>",id:"requestwithrationale",level:3},{value:"<code>requestMultiple</code>",id:"requestmultiple",level:3},{value:"<code>get</code>",id:"get",level:3}],d={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Only for projects supporting Native Code. Requires the project to have been\ncreated using ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native init")," or ejected afterwards if created using\n",(0,r.kt)("inlineCode",{parentName:"p"},"expo init")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"create-react-native-app"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PermissionsAndroid")," provides access to the permissions model avaiable since\n",(0,r.kt)("inlineCode",{parentName:"p"},"Android M"),". While certain permissions are granted by default as long as they\nare listed in ",(0,r.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),", ",(0,r.kt)("em",{parentName:"p"},"dangerous")," permissions require a dialog.\nThis API will allow you to manage such permissions."),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("h3",{id:"permissiont"},(0,r.kt)("inlineCode",{parentName:"h3"},"Permission.t")),(0,r.kt)("p",null,"Type for permissions that may be granted to the app. Available permissions are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"Permission.readCalendar\nPermission.writeCalendar\nPermission.camera\nPermission.readContacts\nPermission.writeContacts\nPermission.getAccounts\nPermission.accessFineLocation\nPermission.accessCoarseLocation\nPermission.recordAudio\nPermission.readPhoneState\nPermission.callPhone\nPermission.readCallLog\nPermission.writeCallLog\nPermission.addVoicemail\nPermission.useSip\nPermission.processOutgoingCalls\nPermission.bodySensors\nPermission.sendSms\nPermission.receiveSms\nPermission.readSms\nPermission.receiveWapPush\nPermission.receiveMms\nPermission.readExternalStorage\nPermission.writeExternalStorage\n")),(0,r.kt)("h3",{id:"resultt"},(0,r.kt)("inlineCode",{parentName:"h3"},"Result.t")),(0,r.kt)("p",null,"Type for the result of a request for some permission. Possible results are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"Result.granted\nResult.denied\nResult.neverAskAgain\n")),(0,r.kt)("h3",{id:"rationale"},(0,r.kt)("inlineCode",{parentName:"h3"},"rationale")),(0,r.kt)("p",null,"To be used with the ",(0,r.kt)("a",{parentName:"p",href:"#requestwithrationale"},(0,r.kt)("inlineCode",{parentName:"a"},"requestWithRationale"))," method. May\nbe created by the constructor of the same name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"rationale:\n  (\n    ~title: string,\n    ~message: string,\n    ~buttonPositive: string,\n    ~buttonNegative: string=?,\n    ~buttonNeutral: string=?,\n    unit\n  ) =>\n  rationale\n")),(0,r.kt)("p",null,"where"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"title")," is the title of the dialog,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message")," is the message of the dialog,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buttonPositive")," is the text of the positive button,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buttonNegative")," is the text of the negative button (optional), and"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"buttonNeutral")," is the text of the neutral button (optional).")),(0,r.kt)("h3",{id:"dict"},(0,r.kt)("inlineCode",{parentName:"h3"},"dict")),(0,r.kt)("p",null,"An extension of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Js.Dict.t")," type to allow keys of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Permission.t"),".\nValues of keys may be accessed by the ",(0,r.kt)("a",{parentName:"p",href:"#get"},(0,r.kt)("inlineCode",{parentName:"a"},"get"))," method."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"check"},(0,r.kt)("inlineCode",{parentName:"h3"},"check")),(0,r.kt)("p",null,"Method to check whether the specified permission has been granted to the app,\nreturns a ",(0,r.kt)("inlineCode",{parentName:"p"},"bool")," wrapped in a promise."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"check: Permission.t => Js.Promise.t(bool)\n")),(0,r.kt)("h3",{id:"request"},(0,r.kt)("inlineCode",{parentName:"h3"},"request")),(0,r.kt)("p",null,"Method to request the specified permission, returns ",(0,r.kt)("inlineCode",{parentName:"p"},"Result.t")," wrapped in a\npromise."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"request: Permission.t => Js.Promise.t(Result.t)\n")),(0,r.kt)("h3",{id:"requestwithrationale"},(0,r.kt)("inlineCode",{parentName:"h3"},"requestWithRationale")),(0,r.kt)("p",null,"Method to request the specified permission with a rationale, returns ",(0,r.kt)("inlineCode",{parentName:"p"},"Result.t"),"\nwrapped in a promise. It is advised to provide a rationale if users have\npreviously turned off the permission. Rationale will be presented to the user\nonly when necessary. For further information, please refer to the\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/training/permissions/requesting.html#explain"},"official Android documentation"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"requestWithRationale: (Permission.t, rationale) => Js.Promise.t(Result.t)\n")),(0,r.kt)("h3",{id:"requestmultiple"},(0,r.kt)("inlineCode",{parentName:"h3"},"requestMultiple")),(0,r.kt)("p",null,"Method to request multiple permissions within the same dialog prompted to the\nuser, returns ",(0,r.kt)("a",{parentName:"p",href:"#dict"},(0,r.kt)("inlineCode",{parentName:"a"},"dict"))," wrapped in a promise."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"requestMultiple: array(Permission.t) => Js.Promise.t(dict)\n")),(0,r.kt)("h3",{id:"get"},(0,r.kt)("inlineCode",{parentName:"h3"},"get")),(0,r.kt)("p",null,"Getter method to access value of the specified permission in the ",(0,r.kt)("a",{parentName:"p",href:"#dict"},(0,r.kt)("inlineCode",{parentName:"a"},"dict")),"\nobject returned by the ",(0,r.kt)("inlineCode",{parentName:"p"},"requestMultiple")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"get: (dict, Permission.t) => option(Result.t)\n")))}m.isMDXComponent=!0}}]);