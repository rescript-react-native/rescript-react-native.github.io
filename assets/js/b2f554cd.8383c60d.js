"use strict";(self.webpackChunkrescript_react_native_github_io=self.webpackChunkrescript_react_native_github_io||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2021-05-04-hello-rescript-react-native","metadata":{"permalink":"/blog/2021-05-04-hello-rescript-react-native","editUrl":"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/blog/2021-05-04-hello-rescript-react-native.md","source":"@site/blog/2021-05-04-hello-rescript-react-native.md","title":"Hello ReScript React Native","description":"Following BuckleScript & Reason Rebranding to offer a unified experience, what was know as Reason React Native is now ReScript React Native.","date":"2021-05-04T00:00:00.000Z","formattedDate":"May 4, 2021","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"rescript","permalink":"/blog/tags/rescript"}],"readingTime":4.25,"hasTruncateMarker":false,"authors":[{"name":"MoOx","title":"ReScript React Native Core Team","url":"https://github.com/MoOx","imageURL":"https://avatars.githubusercontent.com/u/157534?v=4"}],"frontMatter":{"slug":"2021-05-04-hello-rescript-react-native","title":"Hello ReScript React Native","author":"MoOx","author_title":"ReScript React Native Core Team","author_url":"https://github.com/MoOx","author_image_url":"https://avatars.githubusercontent.com/u/157534?v=4","tags":["hello","rescript"]},"nextItem":{"title":"Hello Reason React Native","permalink":"/blog/2019-06-17-hello-reason-react-native"}},"content":"Following [BuckleScript & Reason Rebranding](https://rescript-lang.org/blog/bucklescript-is-rebranding) to offer a unified experience, what was know as _Reason React Native_ is now [ReScript React Native](https://rescript-react-native.github.io).\\n\\nTo make this short: all packages that were published on the behalf of Reason React Native organisation are now published as the _ReScript React Native_ organisation.\\n\\nThis means:\\n\\n- [`reason-react-native`](https://www.npmjs.com/package/reason-react-native) is now [`rescript-react-native`](https://www.npmjs.com/package/rescript-react-native)\\n- [`reason-react-navigation`](https://www.npmjs.com/package/reason-react-navigation) is now [`rescript-react-navigation`](https://www.npmjs.com/package/rescript-react-navigation)\\n- [`@reason-react-native/*`](https://www.npmjs.com/settings/reason-react-native/packages) are now [`@rescript-react-native/*`](https://www.npmjs.com/settings/rescript-react-native/packages)\\n\\n## Should I migrate now all my packages?\\n\\nIt depends on what version of React Native your are using. There is no rush, really.\\n\\n### You use React Native 0.63\\n\\nYou can keep using `reason-react-native` and friends for now. Revisit this post when you will need to upgrade to 0.64.\\n\\n### You use React Native 0.64\\n\\nHere you have 2 possibles upgrades path:\\n\\n#### Keep using `reason-react-native`\\n\\nBefore renaming all packages, we offered a [last release for `reason-react-native`](https://github.com/rescript-react-native/rescript-react-native/releases/tag/0.64.0) to cover React Native 0.64. You can use that until you are ready to switch to ReScript named packages. If you want to know what this will involve, keep reading.\\n\\n#### Switch to `rescript-react-native`\\n\\nThe package [`rescript-react-native` starts with version 0.64.1](https://github.com/rescript-react-native/rescript-react-native/releases/tag/0.64.1). You can try to use it for earlier version of React Native of course, but you might end up to minor inconsistencies, especially for bindings that have been tuned for 0.64. Check out [breaking changes in release notes](https://github.com/rescript-react-native/rescript-react-native/releases/tag/0.64.0) to know what this is all about.\\n\\nIf you are ready to move to ReScript naming, you can use all the new packages. Except `rescript-react-native`, other packages of this organisation have just been renamed for most of them, without any changes.\\n\\nYou can expects minor change between `reason-react-native@0.64` & `rescript-react-native@0.64` but this should not cause you any major trouble to switch.\\nYou will probably notice some Js.t have been converted to record syntax, some polymorphic variants changes and minor things like that, but compiler should just tell you what to do.\\n\\n#### Please note that `@rescript/react` is required for switching\\n\\nYou cannot use `reason-react` and `@rescript/react` as they exposes the same module.\\nThis means this will be \\"all or nothing\\".\\nSome bindings rely on `React` module, so they now depend on `@rescript/react`. This is true for `rescript-react-native` and some other modules.\\n\\nThis is briefly mentionned in [`rescript-react-native@0.64.1` release notes](https://github.com/rescript-react-native/rescript-react-native/releases/tag/0.64.1) but you will also need `bs-platform@^9.0.0`.\\n\\nBefore you ask, `rescript` package is now a thing and up for testing (you can track this using the [ReScript forum, Announcements section](https://forum.rescript-lang.org/c/announcements/7)). This is considered beta at the time of writing this post, so we will change this peer dependency in a near future, when it\'s officially stable. This will replace `bs-platform`, probably in next \\"major\\" release (0.65 or maybe a 0.64.x-rescript).\\n\\n## tl;dr\\n\\nIf you want to switch to the new naming, you need to be ready to use\\n\\n- React 17 and `@rescript/react@^0.10`\\n- React Native 0.64 with `rescript-react-native@^0.64.1`\\n- ReScript 9 via `bs-platform@^9.0.0`\\n\\nIf you have any questions regarding these changes and how to proceed, feel free to [open a discussion on GitHub](https://github.com/rescript-react-native/rescript-react-native/discussions/new), or use [ReScript forum](https://forum.rescript-lang.org).\\n\\n## Wait.. That\'s it?\\n\\nYou might have a question that is still pending: \\"where is gone the promise of cross-platform code that ReasonML was supposed to offer? I was thinking I could someday use my Reason React Native code to compile it to a lower level language that JavaScript to have blazing fast performance... \\"\\n\\nLike I did in the past in my sweet dreams, you may be looking for this. And maybe this will be a reality one day in the future. Some people want this _JSX like_ convenience to build native apps. Some will argue that there are things that you can use today.\\nBut React Native ecosytem is more mature than existing solutions.\\n\\nReact Native can safely be used in production today, and it is for [many successful companies](https://reactnative.dev/showcase). All the modules availables (from the core or the community) make it very easy to avoid writing specific code per platform.\\nPerformance is better and better for every release. Recently [Hermes JavaScript engine was released for iOS](https://reactnative.dev/blog/2021/03/12/version-0.64) and it\'s [really fast](https://callstack.com/blog/hermes-performance-on-ios/). And don\'t forget [TurboModules](https://github.com/react-native-community/discussions-and-proposals/issues/40)!\\n\\nYou can not only write mobile apps this days, but also web apps, thanks to [React Native for Web](https://necolas.github.io/react-native-web/), and even native desktop apps, thanks to [React Native Windows + macOS](https://microsoft.github.io/react-native-windows/). More than enough to ship amazing products to production, today.\\n\\n## What\'s next\\n\\nI guess for the near future, nothing crazy will happen for ReScript React Native. We have to update some bindings from time to time, but beside having to switch from `bs-platform` to `rescript`, things should go smoothly.\\nFeel free to [open a discussion](https://github.com/rescript-react-native/rescript-react-native/discussions/new) if you want bindings for some modules (or just help to write them).\\n\\nWhen stars are not correctly aligned and some package have incorrect bindings, remember that you can always use the fantastic [patch-package](https://www.npmjs.com/package/patch-package) to fix things real quick, and then open an issue at the right place.\\n\\n\u2764\ufe0f _I mostly maintain all this packages all by myself this days, so feel free to [Sponsor Me on GitHub](https://github.com/sponsors/MoOx) and just [share kind words on Twitter](https://twitter.com/MoOx) to keep me motivated_. I hope you enjoy this work like I do."},{"id":"2019-06-17-hello-reason-react-native","metadata":{"permalink":"/blog/2019-06-17-hello-reason-react-native","editUrl":"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/blog/2019-06-17-hello-reason-react-native.md","source":"@site/blog/2019-06-17-hello-reason-react-native.md","title":"Hello Reason React Native","description":"Today is a big day for the ReasonML community as we are releasing the fruits of","date":"2019-06-17T00:00:00.000Z","formattedDate":"June 17, 2019","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"reason","permalink":"/blog/tags/reason"}],"readingTime":4.435,"hasTruncateMarker":false,"authors":[{"name":"MoOx","title":"ReScript React Native Core Team","url":"https://github.com/MoOx","imageURL":"https://avatars.githubusercontent.com/u/157534?v=4"}],"frontMatter":{"slug":"2019-06-17-hello-reason-react-native","title":"Hello Reason React Native","author":"MoOx","author_title":"ReScript React Native Core Team","author_url":"https://github.com/MoOx","author_image_url":"https://avatars.githubusercontent.com/u/157534?v=4","tags":["hello","reason"]},"prevItem":{"title":"Hello ReScript React Native","permalink":"/blog/2021-05-04-hello-rescript-react-native"}},"content":"Today is a big day for the ReasonML community as we are releasing the fruits of\\na long effort started about 4 months ago.\\n\\nAs more and more people were starting to use ReasonML on production apps using\\nReact Native, we wanted to make the ReScript / BuckleScript bindings for React Native,\\nknown has `bs-react-native`, more accessible. This would have involved several\\nbreaking changes in order to simplify some APIs that have been designed with a\\nhigh level of security in mind, but at some costs. The cost of being harder to\\nstart with (for newcomers to ReasonML) as well as the cost in terms of code size\\nand performance.\\n\\nWhile some of us were thinking about some simplifications, some others, involved\\nin Reason React incoming changes, directly started a new approach for this\\nbindings, following\\n[the zero-cost approach offered by reason-react 0.7.0](https://reasonml.github.io/reason-react/blog/2019/04/10/react-hooks).\\n\\n[CCA](https://www.cca.io) started this effort on what is now know as the new\\n`reason-react-native` bindings, that eliminates a huge part of the additional\\nJavaScript code produced by the bindings.\\n\\n## Zero-cost\\n\\nBy zero-cost, we means zero additional cost. The JavaScript code ReScript / BuckleScript\\nproduces using this bindings will most of the time directly hit React Native\\nJavaScript code without creating an unnecessary abstraction above it \ud83d\ude4c.\\n\\nHere are some random examples:\\n\\n- [`bs-react-native` `View`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/bs-react-native/src/components/ViewProps.bs.js)\\n  vs\\n  [`reason-react-native` `View`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/reason-react-native/src/components/View.bs.js)\\n- [`bs-react-native` `Style`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/bs-react-native/src/style.bs.js)\\n  vs\\n  [`reason-react-native` `Style`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/reason-react-native/src/apis/Style.bs.js)\\n- [`bs-react-native` `Platform`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/bs-react-native/src/platform.bs.js)\\n  vs\\n  [`reason-react-native` `Platform`](https://github.com/reason-react-native/reason-react-native/blob/958cd4e3a5ffa303304a0b2404cd53b5f49e649f/reason-react-native/src/apis/Platform.bs.js)\\n\\nSome modules are even empty or with some minor `require()` that can be\\nthemselves almost empty and easily removed by some JavaScript bundlers.\\n\\nHow cool is that?\\n\\n## But why `reason-react-native` ?\\n\\n`bs-react-native` already had multiple breaking changes in the past and we\\ndidn\'t really want to offer a poor experience by creating a new release with\\ntons of changes that won\'t be easy to codemod (or would require much more work\\nfrom us).\\n\\nOn top of that, `reason-react` latest release already added an important\\nbreaking change with\\n[JSX 3](https://reasonml.github.io/reason-react/docs/en/jsx).\\n\\nThat\'s why we had this idea about offering an easy and smooth transition by\\noffering 2 packages to say goodbye to `bs-react-native` without pain.\\n\\n- `bs-react-native-jsx3-compat` (0.11.1)\\n- `reason-react-native`\\n  ([0.60.0](/docs/install/#note-about-reason-react-native-version-number))\\n\\n## Wait, what is `bs-react-native-jsx3-compat` ?\\n\\n`bs-react-native` is using JSX 2 so in order to use it with JSX 3 we would have\\nto create an additional layer on top of the current bindings to offer both JSX 2\\nand 3 bindings. And since we wanted to do away with some current APIs of\\n`bs-react-native` we started to think about a new approach.\\n\\nWe knew that we wanted to:\\n\\n- offer to `bs-react-native` users a migration plan, so they can start very\\n  easily to use JSX 3 and new `reason-react` (so they can use hooks),\\n- offer new `reason-react-native` bindings, more accessible and with a zero cost\\n  approach.\\n- offer a smooth transition between these two packages so people can slowly\\n  upgrade their codebase without having to make an insane PR that switches from\\n  one to the other.\\n\\nWe don\'t want your co-workers to hate you with a PR that comes directly from\\nhell \ud83d\ude05.\\n\\nThat\'s where we thought about offering `bs-react-native-jsx3-compat`. It\'s a\\npackage that has the same APIs `bs-react-native` has but that uses\\n`reason-react-native` under the hood.\\n\\n**This means you will have to make a migration from JSX 2 to 3**. That\'s the\\nonly thing you will have to do, then with a single change from `bs-react-native`\\nwith `bs-react-native-jsx3-compat` in your `bs-dependencies` you will be ready\\nto use hooks and directly benefit of (almost) zero-cost bindings!\\n\\nAnd since we care about you and don\'t want you to upgrade from JSX 2 to 3 by\\nhand, we got you covered with a script made with love to help you with that.\\n\\n[You will find all the required instructions to migrate from `bs-react-native` to `bs-react-native-jsx3-compat` in our documentation](https://reason-react-native.github.io/en/docs/migration/jsx3/).\\n\\n## tl;dr\\n\\n- `bs-react-native` has now entered a frozen state and won\'t receive any upgrade\\n- `bs-react-native-jsx3-compat` allows you to use existing code based on\\n  `bs-react-native` with `reason-react` 0.7.0 and JSX 3\\n- `reason-react-native` package contains the new bindings for React Native, that\\n  offers more accessible APIs and that is almost zero-cost\\n- [We offer you an easy and smooth migration plan so you can start using `reason-react-native` and slowly say bye to `bs-react-native`](https://reason-react-native.github.io/en/docs/migration/jsx3/).\\n\\n## Thanks\\n\\nThis required effort has been keeping us busy for weeks and wouldn\'t have been\\npossible without the following people:\\n\\n- CCA team and especially [@cknitt](https://github.com/cknitt) for leading us to\\n  the right direction for the new zero-cost bindings and all the contributions\\n  that come with this move\\n- [@sgny](https://github.com/sgny) for all his contributions to the new bindings\\n- [@MoOx](https://github.com/MoOx) for leading the effort, the compat layer and\\n  the new website you are seeing here\\n- [@bloodyowl](https://github.com/bloodyowl) for his magical\\n  [reason-react-compat](https://github.com/bloodyowl/reason-react-compat) layer\\n  and\\n  [the alternate JSX 3 upgrade path](https://bloodyowl.github.io/blog/2019-04-19-an-alternative-migration-path-for-reason-react/)\\n  that goes with it\\n- all the people that helped us on Discord and GitHub in various code reviews\\n  and improvements like the react native template (thanks\\n  [@dawee](https://github.com/dawee))\\n\\n## What\'s next?\\n\\nNow that `reason-react-native` is ready to be used and that our migration plan\\nis usable, we will probably be focused on documentation as lots of APIs and\\nComponents need to be documented. We really want to offer the best developer\\nexperience possible and that\'s definitely part of it.\\n\\n\ud83d\udc49Now it\'s time for you to check our\\n[Getting Started with Reason React Native documentation](/docs/)"}]}')}}]);