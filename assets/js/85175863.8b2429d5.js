"use strict";(self.webpackChunkrescript_react_native_github_io=self.webpackChunkrescript_react_native_github_io||[]).push([[9714],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,v=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(v,l(l({ref:t},p),{},{components:n})):a.createElement(v,l({ref:t},p))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5547:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={slug:"cheatsheet",title:"Cheatsheet"},l=void 0,s={unversionedId:"cheatsheet",id:"cheatsheet",title:"Cheatsheet",description:"If you are not familiar with ReScript / Reason, be sure to check ReScript Overview to learn how to interop with JavaScript",source:"@site/docs/cheatsheet.md",sourceDirName:".",slug:"/cheatsheet",permalink:"/docs/cheatsheet",draft:!1,editUrl:"https://github.com/rescript-react-native/rescript-react-native.github.io/edit/src/docs/cheatsheet.md",tags:[],version:"current",frontMatter:{slug:"cheatsheet",title:"Cheatsheet"},sidebar:"docs",previous:{title:"Example",permalink:"/docs/example"}},o={},c=[{value:"JSX String",id:"jsx-string",level:2},{value:"JavaScript JSX String",id:"javascript-jsx-string",level:3},{value:"JSX String",id:"jsx-string-1",level:3},{value:"JSX Number (int)",id:"jsx-number-int",level:2},{value:"JavaScript JSX Number (int)",id:"javascript-jsx-number-int",level:3},{value:"JSX Number (int)",id:"jsx-number-int-1",level:3},{value:"JSX Number (float)",id:"jsx-number-float",level:2},{value:"JavaScript JSX Number (float)",id:"javascript-jsx-number-float",level:3},{value:"JSX Number (float)",id:"jsx-number-float-1",level:3},{value:"JSX Array (of string)",id:"jsx-array-of-string",level:2},{value:"JavaScript JSX Array (of string)",id:"javascript-jsx-array-of-string",level:3},{value:"JSX Array (of string)",id:"jsx-array-of-string-1",level:3},{value:"JSX conditional string",id:"jsx-conditional-string",level:2},{value:"JavaScript JSX conditional string",id:"javascript-jsx-conditional-string",level:3},{value:"JSX conditional string",id:"jsx-conditional-string-1",level:3},{value:"JSX optional value",id:"jsx-optional-value",level:2},{value:"JavaScript JSX optional string",id:"javascript-jsx-optional-string",level:3},{value:"JSX optional string",id:"jsx-optional-string",level:3},{value:"React Native StyleSheet",id:"react-native-stylesheet",level:2},{value:"JavaScript React Native StyleSheet",id:"javascript-react-native-stylesheet",level:3},{value:"ReScript React Native StyleSheet",id:"rescript-react-native-stylesheet",level:3},{value:"Concatenated styles",id:"concatenated-styles",level:2},{value:"JavaScript Concatenated styles",id:"javascript-concatenated-styles",level:3},{value:"Concatenated styles",id:"concatenated-styles-1",level:3},{value:"Optional styles",id:"optional-styles",level:2},{value:"JavaScript Optional styles",id:"javascript-optional-styles",level:3},{value:"Optional styles",id:"optional-styles-1",level:3},{value:"Hello world",id:"hello-world",level:2},{value:"JavaScript Hello World",id:"javascript-hello-world",level:3},{value:"Hello World",id:"hello-world-1",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you are not familiar with ReScript / Reason, be sure to check ",(0,r.kt)("a",{parentName:"p",href:"https://rescript-lang.org/docs/manual/latest/overview"},"ReScript Overview")," to learn how to interop with JavaScript"),(0,r.kt)("h2",{id:"jsx-string"},"JSX String"),(0,r.kt)("h3",{id:"javascript-jsx-string"},"JavaScript JSX String"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<Text>Hello, world!</Text>\n")),(0,r.kt)("h3",{id:"jsx-string-1"},"JSX String"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},'<Text> {"Hello, world!"->React.string} </Text>\n')),(0,r.kt)("h2",{id:"jsx-number-int"},"JSX Number (int)"),(0,r.kt)("h3",{id:"javascript-jsx-number-int"},"JavaScript JSX Number (int)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<Text>42</Text>\n")),(0,r.kt)("h3",{id:"jsx-number-int-1"},"JSX Number (int)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"<Text>\n  {42\n  ->Js.Int.toString\n  ->React.string}\n</Text>\n")),(0,r.kt)("h2",{id:"jsx-number-float"},"JSX Number (float)"),(0,r.kt)("h3",{id:"javascript-jsx-number-float"},"JavaScript JSX Number (float)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<Text>4.2</Text>\n")),(0,r.kt)("h3",{id:"jsx-number-float-1"},"JSX Number (float)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"<Text>\n  {4.2\n  ->Js.Float.toString\n  ->React.string}\n</Text>\n")),(0,r.kt)("h2",{id:"jsx-array-of-string"},"JSX Array (of string)"),(0,r.kt)("h3",{id:"javascript-jsx-array-of-string"},"JavaScript JSX Array (of string)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"{items.map((item, i) =>\n  <Text key={i++item}>\n    {item}\n  </Text>\n)}\n")),(0,r.kt)("h3",{id:"jsx-array-of-string-1"},"JSX Array (of string)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"{items\n->Belt.Array.mapWithIndex((item, index) =>\n  <Text\n    key=((index->Js.Int.toString)++item)>\n    {item->React.string}\n  </Text>\n  )\n->React.array}\n")),(0,r.kt)("h2",{id:"jsx-conditional-string"},"JSX conditional string"),(0,r.kt)("h3",{id:"javascript-jsx-conditional-string"},"JavaScript JSX conditional string"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<Text>{condition && something}</Text>\n")),(0,r.kt)("h3",{id:"jsx-conditional-string-1"},"JSX conditional string"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"<Text>\n  {\n    condition ? something->React.string : React.null\n  }\n</Text>\n")),(0,r.kt)("h2",{id:"jsx-optional-value"},"JSX optional value"),(0,r.kt)("h3",{id:"javascript-jsx-optional-string"},"JavaScript JSX optional string"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Assuming ",(0,r.kt)("inlineCode",{parentName:"em"},"something")," is a ",(0,r.kt)("inlineCode",{parentName:"em"},"string")," that can be ",(0,r.kt)("inlineCode",{parentName:"em"},"undefined"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n  something && <Text>{something.toUpperCase()}</Text>;\n}\n")),(0,r.kt)("h3",{id:"jsx-optional-string"},"JSX optional string"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Recommended: Assuming ",(0,r.kt)("inlineCode",{parentName:"em"},"something")," is an\n",(0,r.kt)("a",{parentName:"em",href:"https://rescript-lang.org/docs/manual/latest/null-undefined-option"},"optional")," ",(0,r.kt)("inlineCode",{parentName:"em"},"string"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"{\n  something\n  ->Belt.Option.map(thing =>\n    <Text>\n      {thing\n      ->Js.String.toUpperCase\n      ->React.string}\n    </Text>\n  )\n  ->Belt.Option.getWithDefault(React.null)\n}\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If you have to work with JavaScript/JSON: Assuming ",(0,r.kt)("inlineCode",{parentName:"em"},"something")," is a JavaScript\n",(0,r.kt)("inlineCode",{parentName:"em"},"string")," that can be ",(0,r.kt)("inlineCode",{parentName:"em"},"undefined"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"{\n  something\n  ->Js.Nullable.toOption /* convert undefined || string  as option(string) */\n  ->Belt.Option.map(thing =>\n    <Text>\n      {thing\n      ->Js.String.toUpperCase\n      ->React.string}\n    </Text>\n  )\n  ->Belt.Option.getWithDefault(React.null)\n}\n")),(0,r.kt)("h2",{id:"react-native-stylesheet"},"React Native StyleSheet"),(0,r.kt)("h3",{id:"javascript-react-native-stylesheet"},"JavaScript React Native StyleSheet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { StyleSheet } from "react-native";\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 600,\n    width: 800,\n    justifyContent: "flex-start",\n    alignItems: "center",\n    margin: "auto",\n  },\n  cornerThing: {\n    position: "absolute",\n    top: 100,\n    right: -20,\n    transform: [{ rotate: "4deg" }],\n  },\n  text: {\n    textTransform: "uppercase",\n  },\n});\n\nconsole.log(StyleSheet.flatten([styles.container]));\n')),(0,r.kt)("h3",{id:"rescript-react-native-stylesheet"},"ReScript React Native StyleSheet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},'open ReactNative\nopen ReactNative.Style // this is useful since all units & style methods comes from Style module\n\nlet styles =\n  {\n    "container":\n      viewStyle(\n        ~maxHeight=600.->dp,\n        ~width=80.->pct,\n        ~justifyContent=`flexStart,\n        ~alignItems=`center,\n        ~margin=auto,\n        (),\n      ),\n    "cornerThing":\n      viewStyle(\n        ~position=`absolute,\n        ~top=100.->dp,\n        ~right=(-20.)->dp,\n        ~transform=[|rotate(~rotate=4.->deg)|],\n        (),\n      ),\n    "text": textStyle(~textTransform=`uppercase, ()),\n  }->StyleSheet.create\n\nJs.log(StyleSheet.flatten([|styles##container|]))\n')),(0,r.kt)("h2",{id:"concatenated-styles"},"Concatenated styles"),(0,r.kt)("h3",{id:"javascript-concatenated-styles"},"JavaScript Concatenated styles"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<View style={[styles.container, styles.containerAdditionalStyles]} />\n")),(0,r.kt)("h3",{id:"concatenated-styles-1"},"Concatenated styles"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"open ReactNative.Style\n\n<View\n  style={array([|\n    styles##container,\n    styles##containerAdditionalStyles\n  |])}\n/>\n")),(0,r.kt)("h2",{id:"optional-styles"},"Optional styles"),(0,r.kt)("h3",{id:"javascript-optional-styles"},"JavaScript Optional styles"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<View\n  style={[\n    styles.container,\n    condition && styles.containerAdditionalStyles,\n    condition2 && { width: 40 },\n  ]}\n/>\n")),(0,r.kt)("h3",{id:"optional-styles-1"},"Optional styles"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},"open ReactNative.Style\n\n<View\n  style={arrayOption([|\n    Some(styles##container),\n    condition ? Some(styles##containerAdditionalStyles) : None,\n    condition2 ? Some(viewStyle(~width=40.->dp, ())) : None,\n  |])}\n/>\n")),(0,r.kt)("h2",{id:"hello-world"},"Hello world"),(0,r.kt)("h3",{id:"javascript-hello-world"},"JavaScript Hello World"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'/* App.js */\nimport React, { Component } from "react";\nimport { Text, View } from "react-native";\n\nexport default class HelloWorld extends Component {\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: "center",\n          alignItems: "center",\n        }}\n      >\n        <Text>Hello, {this.props.name || "world"}!</Text>\n      </View>\n    );\n  }\n}\n')),(0,r.kt)("h3",{id:"hello-world-1"},"Hello World"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rescript"},'/* App.res */\nopen Belt\nopen ReactNative\nopen ReactNative.Style\n\n[@react.component]\nlet make = (~name=?) => {\n  <View\n    style={\n      viewStyle(~flex=1., ~justifyContent=`center, ~alignItems=`center, ())\n    }>\n    <Text>\n      {("Hello, " ++ name->Option.getWithDefault("world") ++ "!")\n       ->React.string}\n    </Text>\n  </View>\n}\n')))}u.isMDXComponent=!0}}]);